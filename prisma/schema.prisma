// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  created       DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  contacts      Contact[]
  categories    Category[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Contact {
  id         String     @id @default(cuid())
  created    DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  userId     String
  firstName  String
  lastName   String?
  birthday   DateTime?
  address1   String
  address2   String?
  city       String
  county     String?
  postCode   String
  email      String?
  phone      String?
  image      String?
  categories Category[]
  user       User       @relation(fields: [userId], references: [id])
}

model Category {
  id        String    @id @default(cuid())
  created   DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  name      String
  user      User      @relation(fields: [userId], references: [id])
  contacts  Contact[]

  @@unique([userId, name])
}
